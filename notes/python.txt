Python
------
->

PyCharm IDE
------------
-> Project name, Directory name & Filename must be in CapitalCamelCase.
Ex: PythonPractice

Variables
----------
variables are used to store data.

Data Types
-----------
int, float, string, boolean
list, tuple, set, dictionary

Type Casting
-------------
Converting one data type into another type


Operators
----------
Arithmetic Operators
+, -, *, %, /, //, **

a + b

a and b are Operands
+ is Operator

Assignment Operators
=,
+=, -=, *=, /=, %= (Compound Assignment Operators)


Relational Operators - returns boolean value

==, !=, >, <, >=, <=

if one condition is True, it will be True

Logical Operators

and, or, not

Operator Precedence
-------------------

BODMAS - Brackets, Of, Divison, Multiply, Addition, Subtraction

()- Highest Priority

Followed by exponential operator (**)

Followed by * / % // (Have the same precedence)

Followed by + - (Have the same precedence)

-> Same precedence operators are evaluated from left to right

Deleting a variable
-------------------
del variable_name


String Concatenation
---------------------
-> Using +sign for String concatenation
+ can only concatenate String text with another String text
+ cannot be used to concatenate String text with a number

-> Using ,sign in print statements when concatenating String text with numbers

Storing Multi-line preformatted String text into a variable
------------------------------------------------------------
poem = """
pon the pyres of martyrs, every human will rise,
In the soil of the motherland, every human will harmonize.
"""

Storing a lengthy text into a variable
-----------------------------------------
using \


Formatting print statements
-----------------------------
- using + and str()
- using ,
- using {}
- using {index}
- using %s, %d, %f or %g

Control flow statements
------------------------
3 categories

1. Selection/Decision statements
if, if..else, if..elif..else.

2. Reptition/Loop statements
while, for

3. Transfer/Jump statements
break, continue, return, try & except

While loop
----------
- while loop won't be executed once, if the condition is false by default.
- while loop executes infinite times if the condition is always true.
- while loop iterates until the condition becomes false.
- we can use else block with while loop.


break and continue statements
-----------------------------
using break and continue statements with for loop & while loop

function
---------
function is a block of code.
def my_function():

- naming convention of functions - snake case.
example:
my_function







